---
- name: Preparing Workstation
  hosts: localhost
  connection: local
  tasks:

    - name: Installing Linux Apps
      become: true
      apt:
        name: '{{ item }}'
        install_recommends: yes
        state: present
      loop:
          - vim
          - htop
          - curl
          - wget
          - ncdu
          - tree
          - apt-transport-https
          - ca-certificates
          - gnupg
          - python3-pip
          - make
          - git
          - bash-completion
          - gnupg-agent
          - zsh
          - flameshot
          - fonts-hack
          - tilix
          - virtualbox
          - timeshift
          - mlocate
          - krita
          - build-essential
          - neofetch

    # ZSH
    - block:
      - name: Verify if Oh-My-zsh is installed
        command: test -d /home/{{ ansible_user }}/.oh-my-zsh
        register: ohmyzsh
        ignore_errors: true
      - name: Installing Oh-My-zsh
        shell:
          cmd: 'curl -fsL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash'
          warn: false
        when: ohmyzsh.rc != 0
      - name: Changing Default Shell to ZSH
        become: yes
        user: 
          name: '{{ ansible_user }}'
          shell: /bin/zsh 
      - name: Changing Default ZSH Theme to Agnoster
        lineinfile:
          path: /home/{{ ansible_user }}/.zshrc
          regexp: '^ZSH_THEME='
          line: 'ZSH_THEME="agnoster"'
    
    # AWS
    - name: Installing AWS CLI via pip3
      become: true
      pip:
        name: awscli
        executable: pip3

    # Google Apps
    - block:
      - name: Install Google Key
        become: true
        apt_key: 
          url: 'https://dl.google.com/linux/linux_signing_key.pub'
          state: present
      
      - name: Install Google Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main'
          state: present
          filename: google-chrome
      
      - name: Install Google Chrome
        become: true
        apt:
          name: google-chrome-stable
  
    # Spotify
    - block:
      - name: Install Spotify Key
        become: true
        apt_key: 
          url: 'https://download.spotify.com/debian/pubkey.gpg'
          state: present
      
      - name: Install Spotify
        become: true
        apt_repository:
          repo: 'deb http://repository.spotify.com stable non-free'
          state: present
          filename: spotify-client

    # Skype
    - block:
      - name: Install Skype Key
        become: true
        apt_key: 
          url: 'https://repo.skype.com/data/SKYPE-GPG-KEY'
          state: present
      
      - name: Install Skype Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://repo.skype.com/deb stable main'
          state: present
          filename: skypeforlinux

    # Vagrant
    - block:
      - name: Installing Vagrant 2.2.10
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/vagrant/2.2.10/vagrant_2.2.10_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes
    
    # Terraform
    - block:
      - name: Installing Terraform 0.12.19
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/terraform/0.12.29/terraform_0.12.29_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes

    # Hashicorp Vault
    - block:
      - name: Installing Vault 1.5.0
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/vault/1.5.0/vault_1.5.0_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes
    
    # Gomplate
    - block:
      - name: Installing gomplate 3.7.0
        become: true
        get_url:    
          url: 'https://github.com/hairyhenderson/gomplate/releases/download/v3.7.0/gomplate_linux-amd64'
          dest: /usr/local/bin/gomplate
          mode: 755
          remote_src: yes
    
    # Stern 
    - block:
      - name: Installing Stern 1.11.0
        become: true
        get_url:    
          url: 'https://github.com/wercker/stern/releases/download/1.11.0/stern_linux_amd64'
          dest: /usr/local/bin/stern
          mode: 755
          remote_src: yes
    
    # GCP
    - block:
      - name: Install Google Cloud SDK Key
        become: true
        apt_key:
          url: 'https://packages.cloud.google.com/apt/doc/apt-key.gpg'
          state: present
      - name: Install Google Cloud SDK Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://packages.cloud.google.com/apt cloud-sdk main'
          state: present
          filename: google-cloud-sdk
      - name: Install Google Cloud SDK
        become: true
        apt:
          name: google-cloud-sdk

    # Microsoft      
    - block:
      - name: Install Microsoft Key
        become: true
        apt_key:
          url: 'https://packages.microsoft.com/keys/microsoft.asc'
          state: present
      
      - name: Install VSCode Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main'
          state: present
          filename: vscode
      
      - name: Install Visual Studio Code
        become: true
        apt:
          name: code
      
      - name: Install Virtual Studio Code Extensions
        shell:
          cmd: code --install-extension '{{ item }}' 
        loop: 
          - ms-python.python
          - puppet.puppet-vscode
          - ms-azuretools.vscode-docker
          - bbenoist.vagrant
          - hashicorp.terraform
      
      - name: Install AZ Cli
        become: true
        apt:
          name: azure-cli

      - name: Install Teams
        become: true
        apt:
          name: teams

    # Docker
    - block: 
      - name: Install Docker Key
        become: true
        apt_key:
          url: 'https://download.docker.com/linux/ubuntu/gpg'
          state: present
      - name: Install Docker Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable'
          state: present
          filename: docker-ce
      - name: Install Docker
        become: true
        apt:
          name: docker-ce
      - name: Adding existing user to group Docker
        become: yes
        user: 
          name: '{{ ansible_user }}'
          groups: docker 
          append: yes
      - name: Install Docker Machine Bash Completion
        become: true
        get_url:
          url: 'https://github.com/docker/compose/releases/download/1.26.2/docker-compose-Linux-x86_64'
          dest: '/usr/local/bin/docker-compose'
          mode: 755
          remote_src: yes
      - name: Install Docker-Compose
        become: true
        get_url:
          url: 'https://raw.githubusercontent.com/docker/machine/v0.16.0/contrib/completion/bash/docker-machine.bash'
          dest: '/etc/bash_completion.d/docker-machine'
          remote_src: yes
      - name: Install Docker-Compose Bash Completion
        become: true
        get_url:
          url: 'https://raw.githubusercontent.com/docker/compose/1.26.2/contrib/completion/bash/docker-compose'
          dest: '/etc/bash_completion.d/docker-compose'
          remote_src: yes
      - name: Install Docker-Compose and Docker Machine Zsh Completion
        lineinfile:
          path: /home/{{ ansible_user }}/.zshrc
          regexp: '^plugins='
          line: 'plugins=(git docker docker-compose)'
        
    # Kubectl  
    - block:
      - name: Installing Kubectl 1.16.0
        become: true
        get_url:    
          url: 'https://storage.googleapis.com/kubernetes-release/release/v1.16.0/bin/linux/amd64/kubectl'
          dest: /usr/local/bin/kubectl
          mode: 755
          remote_src: yes          

    # Golang
    - block:
      - name: Adding Longsleep/Golang Backports Repository
        become: true
        apt_repository:
          repo: 'ppa:longsleep/golang-backports'
      - name: Install Golang 
        become: true
        apt:
          name: golang-go
    
    # Tor
    - block:
      - name: Adding TOR Repo
        become: true
        apt_repository:
          repo: 'ppa:micahflee/ppa'
      - name: Install Tor 
        become: true
        apt:
          name: torbrowser-launcher
    
    # Meteo
    - block:
      - name: Adding Meteo
        become: true
        apt_repository:
          repo: 'ppa:bitseater/ppa'
      - name: Install meteo 
        become: true
        apt:
          name: com.gitlab.bitseater.meteo
          



# OPTIONAL:
#  - PEEK - Lightweight Screen Recorder that can export as GIF
#  - OBS-STUDIO - Screen Recorder and Casting Software 
#  - Brave Browser - Secure web browser
#  - Ulauncher - Application Launcher

    - block:
      - name: Adding Peek Repository
        become: true
        apt_repository:
          repo: 'ppa:peek-developers/stable'
      - name: Install Peek
        become: true
        apt:
          name: peek

    - block:
      - name: Install obsproject Ubuntu Repo
        become: true
        apt_repository:
          repo: 'ppa:obsproject/obs-studio'
      - name: Install obs Studio
        become: true
        apt:
          name: obs-studio

    - block: 
      - name: Install Brave Key
        become: true
        apt_key:
          url: 'https://brave-browser-apt-release.s3.brave.com/brave-core.asc'
          state: present
      - name: Install Brave Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main'
          state: present
          filename: brave
      - name: Install Brave Browser
        become: true
        apt:
          name: brave-browser

    - block:
      - name: Adding Ulauncher Repository
        become: true
        apt_repository:
          repo: 'ppa:agornostal/ulauncher'
      - name: Install Ulauncher
        become: true
        apt:
          name: ulauncher
